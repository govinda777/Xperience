#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}🚀 Iniciando verificações de pre-commit...${NC}"

# Verificar segredos e informações sensíveis
echo -e "${BLUE}🔒 Verificando segredos e informações sensíveis...${NC}"
npm run security:check || {
  echo -e "${RED}❌ Detectados segredos ou informações sensíveis no código${NC}"
  exit 1
}

# Verificar se há alterações em arquivos de teste
if git diff --cached --name-only | grep -E "\.test\.(ts|tsx)$|\.spec\.(ts|tsx)$"; then
  echo -e "${YELLOW}⚠️  Detectadas alterações em arquivos de teste. Executando suite de testes completa...${NC}"
  npm run test:unit
else
  echo -e "${BLUE}ℹ️  Nenhuma alteração em arquivos de teste. Pulando suite completa.${NC}"
fi

# Executar lint-staged
echo -e "${BLUE}🔍 Executando lint-staged...${NC}"
npx lint-staged

# Verificar se há alterações em arquivos de build
if git diff --cached --name-only | grep -E "vite\.config\.ts$|tsconfig\.json$"; then
  echo -e "${YELLOW}⚠️  Detectadas alterações em arquivos de configuração. Executando build de teste...${NC}"
  npm run build
else
  echo -e "${BLUE}ℹ️  Nenhuma alteração em arquivos de configuração. Pulando build.${NC}"
fi

# Verificar vulnerabilidades em dependências
echo -e "${BLUE}🛡️ Verificando vulnerabilidades em dependências...${NC}"
npm run security:audit || {
  echo -e "${YELLOW}⚠️ Detectadas vulnerabilidades em dependências. Por favor, revise e atualize as dependências afetadas.${NC}"
  # Não bloqueia o commit, mas alerta o desenvolvedor
}

echo -e "${GREEN}✅ Pre-commit concluído com sucesso!${NC}"