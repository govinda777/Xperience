#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}üöÄ Iniciando verifica√ß√µes de pre-push...${NC}"

# Executar verifica√ß√µes em paralelo
{
  # Verifica√ß√£o de tipos TypeScript
  echo -e "${BLUE}‚ÑπÔ∏è  Verificando tipos TypeScript...${NC}"
  yarn type-check
} &
typescript_pid=$!

{
  # Testes unit√°rios
  echo -e "${BLUE}‚ÑπÔ∏è  Executando testes unit√°rios...${NC}"
  yarn test:unit
} &
tests_pid=$!

{
  # Build do projeto
  echo -e "${BLUE}‚ÑπÔ∏è  Realizando build do projeto...${NC}"
  yarn build
} &
build_pid=$!

{
  # Verifica√ß√£o de seguran√ßa
  echo -e "${BLUE}üîí Executando verifica√ß√µes de seguran√ßa...${NC}"
  yarn security:check && yarn security:audit
} &
security_pid=$!

# Aguardar conclus√£o de todos os processos
wait $typescript_pid
typescript_status=$?
wait $tests_pid
tests_status=$?
wait $build_pid
build_status=$?
wait $security_pid
security_status=$?

# Verificar resultados
if [ $typescript_status -ne 0 ] || [ $tests_status -ne 0 ] || [ $build_status -ne 0 ] || [ $security_status -ne 0 ]; then
  echo -e "${RED}‚ùå Falha nas verifica√ß√µes de pre-push${NC}"
  if [ $security_status -ne 0 ]; then
    echo -e "${RED}‚ö†Ô∏è  Falha nas verifica√ß√µes de seguran√ßa. Por favor, corrija os problemas antes de fazer push.${NC}"
  fi
  exit 1
fi

echo -e "${GREEN}‚úÖ Pre-push conclu√≠do com sucesso!${NC}"